[test]

[[test.clickhouse]]
version = "latest"
dir = "tests/clickhouse/rollup"
delay = "10s"

[test.carbon_clickhouse]
version = "v0.11.1"
template = "carbon-clickhouse.conf.tpl"

[[test.graphite_clickhouse]]
template = "graphite-clickhouse-cached.conf.tpl"

[[test.graphite_clickhouse]]
template = "graphite-clickhouse-internal-aggr-cached.conf.tpl"

##########################################################################
[[test.input]]
name = "test.cache"
points = [{value = 1.0, time = "today-270"}, {value = 3.0, time = "now"}]

[[test.input]]
name = "cache;scope=test"
points = [{value = 2.0, time = "today-270"}, {value = 4.0, time = "now"}]

##########################################################################
[[test.find_checks]]
query = "test"
cache_ttl = 120
result = [{ path = "test", is_leaf = false }]

[[test.find_checks]]
query = "test.cache"
cache_ttl = 120
result = [{ path = "test.cache", is_leaf = true }]

##########################################################################

[[test.tags_checks]]
query = "name;scope=test"
cache_ttl = 120
result = [
    "cache",
]

##########################################################################
# Short cache  TTL

[[test.render_checks]]
from = "now"
until = "now+10"
cache_ttl = 60
targets = [ "test.cache" ]

[[test.render_checks.result]]
name = "test.cache"
path = "test.cache"
consolidation = "avg"
start = "now"
stop = "now+20"
step = 10
req_start = "now"
req_stop = "now+20"
values = [3.0, nan]

# Already in find cache
[[test.render_checks]]
from = "now"
until = "now+20"
in_cache = true
cache_ttl = 60
targets = [ "test.cache" ]

[[test.render_checks.result]]
name = "test.cache"
path = "test.cache"
consolidation = "avg"
start = "now"
stop = "now+30"
step = 10
req_start = "now"
req_stop = "now+30"
values = [3.0, nan, nan]

##########################################################################
# Short cache  TTL

[[test.render_checks]]
from = "now"
until = "now+10"
cache_ttl = 60
targets = [ 
    "seriesByTag('scope=test')"
]

[[test.render_checks.result]]
name = "cache;scope=test"
path = "seriesByTag('scope=test')"
consolidation = "avg"
start = "now"
stop = "now+20"
step = 10
req_start = "now"
req_stop = "now+20"
values = [4.0, nan]

# Already in find cache
[[test.render_checks]]
from = "now"
until = "now+20"
in_cache = true
cache_ttl = 60
targets = [ 
    "seriesByTag('scope=test')"
]

[[test.render_checks.result]]
name = "cache;scope=test"
path = "seriesByTag('scope=test')"
consolidation = "avg"
start = "now"
stop = "now+30"
step = 10
req_start = "now"
req_stop = "now+30"
values = [4.0, nan, nan]

##########################################################################
# Default cache  TTL

[[test.render_checks]]
from = "today-270"
until = "today-20"
cache_ttl = 300
targets = [ "test.cache" ]

[[test.render_checks.result]]
name = "test.cache"
path = "test.cache"
consolidation = "avg"
start = "today-270"
stop = "today-10"
step = 10
req_start = "today-270"
req_stop = "today-10"
values = [1.0, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]

# Already in find cache
[[test.render_checks]]
from = "today-270"
until = "today-10"
in_cache = true
cache_ttl = 300
targets = [ "test.cache" ]

[[test.render_checks.result]]
name = "test.cache"
path = "test.cache"
consolidation = "avg"
start = "today-270"
stop = "today"
step = 10
req_start = "today-270"
req_stop = "today"
values = [1.0, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]

# Fetch points from 2 days, not in cache
[[test.render_checks]]
from = "today-270"
until = "today"
cache_ttl = 300
targets = [ "test.cache" ]

[[test.render_checks.result]]
name = "test.cache"
path = "test.cache"
consolidation = "avg"
start = "today-270"
stop = "today+10"
step = 10
req_start = "today-270"
req_stop = "today+10"
values = [1.0, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]

##########################################################################
